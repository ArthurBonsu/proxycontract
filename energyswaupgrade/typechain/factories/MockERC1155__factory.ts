/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockERC1155 } from "../MockERC1155";

export class MockERC1155__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokenSupply",
        type: "uint256",
      },
    ],
    name: "mintOriginal",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916321790556106a7806100326000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063156e29f61461003b57806356f682d414610050575b600080fd5b61004e61004936600461058e565b610075565b005b61006361005e3660046104c3565b6101b0565b60405190815260200160405180910390f35b6000546001600160a01b031632146100fa5760405162461bcd60e51b815260206004820152603e60248201527f4e46542e6d696e743a206f6e6c7920746f6b656e2063726561746f722063616e60448201527f206d696e742061206e657720746f6b656e20617420746869732074696d65000060648201526084015b60405180910390fd5b6005600083610108816105d8565b9450815260200190815260200160002054600660008480610128906105d8565b9550815260200190815260200160002054101561015557634e487b7160e01b600052600160045260246000fd5b600180600082825461016791906105c0565b90915550610178905083838361029d565b80600560006101868561062a565b945084815260200190815260200160002060008282546101a691906105c0565b9091555050505050565b60006002831180156101c25750600182115b6101dc57634e487b7160e01b600052600160045260246000fd5b6001549050600060015460016101f291906105c0565b90506101ff86838661029d565b61020982866103d7565b32600460006102178561062a565b945084815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555083600560008461025b9061062a565b94508481526020019081526020016000208190555082600660008461027f9061062a565b94508481526020019081526020016000208190555050949350505050565b6001600160a01b0383166103275760405162461bcd60e51b8152602060048201526044602482018190527f4d6f636b455243313135352e5f6d696e743a2063616e6e6f74206d696e742074908201527f6f20746865207a65726f20616464726573732c2074686174277320696e636f726064820152631c9958dd60e21b608482015260a4016100f1565b80600260006103378560016105c0565b81526020019081526020016000206000856001600160a01b03166001600160a01b03168152602001908152602001600020600082825461037791906105c0565b909155505060408051328152600060208201526001600160a01b03851681830152606081018490526080810183905290517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629181900360a00190a1505050565b8060036000846103e68161062a565b95508152602001908152602001600020908051906020019061040992919061040e565b505050565b82805461041a906105ef565b90600052602060002090601f01602090048101928261043c5760008555610482565b82601f1061045557805160ff1916838001178555610482565b82800160010185558215610482579182015b82811115610482578251825591602001919060010190610467565b5061048e929150610492565b5090565b5b8082111561048e5760008155600101610493565b80356001600160a01b03811681146104be57600080fd5b919050565b600080600080608085870312156104d8578384fd5b6104e1856104a7565b9350602085013567ffffffffffffffff808211156104fd578485fd5b818701915087601f830112610510578485fd5b8135818111156105225761052261065b565b604051601f8201601f19908116603f0116810190838211818310171561054a5761054a61065b565b816040528281528a6020848701011115610562578788fd5b826020860160208301379182016020019690965295989597505050506040840135936060013592915050565b6000806000606084860312156105a2578283fd5b6105ab846104a7565b95602085013595506040909401359392505050565b600082198211156105d3576105d3610645565b500190565b6000816105e7576105e7610645565b506000190190565b60028104600182168061060357607f821691505b6020821081141561062457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561063e5761063e610645565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208c2f2f334bd205a0287fe59d5b80d2de7558ab51f0a35eaec268d778b1734e7464736f6c63430008020033";
