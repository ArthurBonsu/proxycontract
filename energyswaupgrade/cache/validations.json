{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergiToken": {
        "src": "contracts\\EnergiToken.sol:11",
        "version": {
          "withMetadata": "8f9918165ad3cb41c22133feab665611926ea31c13ba42f2674253e2ec417c55",
          "withoutMetadata": "7f739efde3f6fe221aebfbafdf7f1390119741933039fcc18c05c4b0a6d666d8",
          "linkedWithoutMetadata": "7f739efde3f6fe221aebfbafdf7f1390119741933039fcc18c05c4b0a6d666d8"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergiToken",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergiToken.sol:16"
            },
            {
              "contract": "EnergiToken",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergiToken.sol:17"
            },
            {
              "contract": "EnergiToken",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergiToken.sol:18"
            },
            {
              "contract": "EnergiToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergiToken.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IEnergiToken": {
        "src": "contracts\\interfaces\\IEnergiToken.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "81aec79cc1c10d57c482b90db7badc6e50e3dd590c5bfe345fed77da66eb0a2f",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyGridUpgradeableV2": {
        "src": "contracts\\EnergyGridUpgradeableV2.sol:11",
        "version": {
          "withMetadata": "77028d9a1086878aaa42c0c93660c189e14999bd9235c176bd4ae7945d313405",
          "withoutMetadata": "7b507b4c717e7720078ab23702580d242aa573bb5f463748bb1d66976a989147",
          "linkedWithoutMetadata": "7b507b4c717e7720078ab23702580d242aa573bb5f463748bb1d66976a989147"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "StringUtils"
        ],
        "methods": [
          "(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "balanceOf(address)",
          "owner()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnergyGridUpgradeableV2",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:102"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:68"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:69"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:71"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:72"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:73"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:74"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:75"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:76"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)842_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)851_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:80"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)864_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)842_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)851_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:85"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)864_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)842_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:90"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)851_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:91"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)864_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:92"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)842_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.Grid)"
            },
            "t_struct(Grid)842_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)851_storage)": {
              "label": "mapping(address => struct EnergyGridUpgradeableV2.Users)"
            },
            "t_struct(Users)851_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)864_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)864_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)842_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)851_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)864_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:4",
        "version": {
          "withMetadata": "41a2b282b275b363186d784fb0ba5a0b92961655271bddbc29c39469324e81c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "81aec79cc1c10d57c482b90db7badc6e50e3dd590c5bfe345fed77da66eb0a2f",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyGridUpgradeableV2": {
        "src": "contracts\\EnergyGridUpgradeableV2.sol:11",
        "version": {
          "withMetadata": "55342533ae9007fba7d9355b06dd73ad3beffc4eb103c9c3a73725d77b3179fe",
          "withoutMetadata": "7b507b4c717e7720078ab23702580d242aa573bb5f463748bb1d66976a989147",
          "linkedWithoutMetadata": "7b507b4c717e7720078ab23702580d242aa573bb5f463748bb1d66976a989147"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "StringUtils"
        ],
        "methods": [
          "(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "balanceOf(address)",
          "owner()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnergyGridUpgradeableV2",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:102"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:68"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:69"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:71"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:72"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:73"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:74"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:75"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:76"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)2042_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)2051_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:80"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)2064_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)2042_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)2051_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:85"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)2064_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)2042_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:90"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)2051_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:91"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)2064_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:92"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)2042_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.Grid)"
            },
            "t_struct(Grid)2042_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)2051_storage)": {
              "label": "mapping(address => struct EnergyGridUpgradeableV2.Users)"
            },
            "t_struct(Users)2051_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)2064_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)2064_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)2042_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)2051_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)2064_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "6981de548d77f130ba3513d7c0397cebce1009623b449c65df21240305b4c5f2",
          "withoutMetadata": "4ee5d5ea4207f8c570a17370de7191b662ab6e02ea8f4b3e7da215cab8313046",
          "linkedWithoutMetadata": "4ee5d5ea4207f8c570a17370de7191b662ab6e02ea8f4b3e7da215cab8313046"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)3248_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)3257_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)3270_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)3248_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:77"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)3257_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:78"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)3270_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)3248_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)3257_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)3270_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)3248_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)3248_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)3257_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)3257_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)3270_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)3270_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)3248_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)3257_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)3270_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:4",
        "version": {
          "withMetadata": "41a2b282b275b363186d784fb0ba5a0b92961655271bddbc29c39469324e81c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "81aec79cc1c10d57c482b90db7badc6e50e3dd590c5bfe345fed77da66eb0a2f",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyGridUpgradeableV2": {
        "src": "contracts\\EnergyGridUpgradeableV2.sol:11",
        "version": {
          "withMetadata": "406f42d600641bcd2cc9711ec6c99ef479a598a2889d7101c492ee116fbd26db",
          "withoutMetadata": "e02d54908fc6e2558472c4fd0973e756f03b326e3f447d56eabc178103dd28e2",
          "linkedWithoutMetadata": "e02d54908fc6e2558472c4fd0973e756f03b326e3f447d56eabc178103dd28e2"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath",
          "StringUtils"
        ],
        "methods": [
          "(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "balanceOf(address)",
          "owner()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnergyGridUpgradeableV2",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:102"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:68"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:69"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:71"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:72"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:73"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:74"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:75"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:76"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)842_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)851_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:80"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)864_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)842_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)851_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:85"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)864_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)842_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:90"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)851_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:91"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)864_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:92"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)842_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.Grid)"
            },
            "t_struct(Grid)842_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)851_storage)": {
              "label": "mapping(address => struct EnergyGridUpgradeableV2.Users)"
            },
            "t_struct(Users)851_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)864_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)864_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)842_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)851_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)864_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:4",
        "version": {
          "withMetadata": "41a2b282b275b363186d784fb0ba5a0b92961655271bddbc29c39469324e81c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "81aec79cc1c10d57c482b90db7badc6e50e3dd590c5bfe345fed77da66eb0a2f",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyGridUpgradeableV2": {
        "src": "contracts\\EnergyGridUpgradeableV2.sol:11",
        "version": {
          "withMetadata": "d9bfd2f2b98b0e76ce315186521aed2af5378a934a8ceb562e9a4f4e9e72e99c",
          "withoutMetadata": "8d21a1d130660c6b18f906384ea1827574d58f951f60940f763a86bf71c84ef5",
          "linkedWithoutMetadata": "8d21a1d130660c6b18f906384ea1827574d58f951f60940f763a86bf71c84ef5"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "StringUtils"
        ],
        "methods": [
          "(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "balanceOf(address)",
          "owner()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnergyGridUpgradeableV2",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:102"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:68"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:69"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:71"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:72"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:73"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:74"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:75"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:76"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)2039_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)2048_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:80"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)2061_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)2039_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)2048_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:85"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)2061_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)2039_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:90"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)2048_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:91"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)2061_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:92"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)2039_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.Grid)"
            },
            "t_struct(Grid)2039_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)2048_storage)": {
              "label": "mapping(address => struct EnergyGridUpgradeableV2.Users)"
            },
            "t_struct(Users)2048_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)2061_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)2061_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)2039_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)2048_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)2061_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "e14dbdb5e1015ac93618bcc820c214d753cc3a7f5a79d21d6a22444351a45e77",
          "withoutMetadata": "2b0a42dd95bfc893f79581fafecd75ac9ca63ece4f28661ec098ae50915d4401",
          "linkedWithoutMetadata": "2b0a42dd95bfc893f79581fafecd75ac9ca63ece4f28661ec098ae50915d4401"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "energyidset(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:23"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:4",
        "version": {
          "withMetadata": "41a2b282b275b363186d784fb0ba5a0b92961655271bddbc29c39469324e81c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "81aec79cc1c10d57c482b90db7badc6e50e3dd590c5bfe345fed77da66eb0a2f",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyGridUpgradeableV2": {
        "src": "contracts\\EnergyGridUpgradeableV2.sol:11",
        "version": {
          "withMetadata": "7963abd6677af6b6e365deb01374f126589dc7d751c5bca0c31389dc03e62393",
          "withoutMetadata": "580b8bc6f58cac6e32d5e70dd6aa7694bc212afa98057ebd8c020c3b40d1146a",
          "linkedWithoutMetadata": "580b8bc6f58cac6e32d5e70dd6aa7694bc212afa98057ebd8c020c3b40d1146a"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "StringUtils"
        ],
        "methods": [
          "(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "balanceOf(address)",
          "owner()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnergyGridUpgradeableV2",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:102"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:68"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:69"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:71"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:72"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:73"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:74"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:75"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:76"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)839_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)848_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:80"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)861_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)839_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)848_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:85"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)861_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)839_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:90"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)848_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:91"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)861_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:92"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)839_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.Grid)"
            },
            "t_struct(Grid)839_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)848_storage)": {
              "label": "mapping(address => struct EnergyGridUpgradeableV2.Users)"
            },
            "t_struct(Users)848_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)861_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)861_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)839_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)848_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)861_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:4",
        "version": {
          "withMetadata": "41a2b282b275b363186d784fb0ba5a0b92961655271bddbc29c39469324e81c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "81aec79cc1c10d57c482b90db7badc6e50e3dd590c5bfe345fed77da66eb0a2f",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyGridUpgradeableV2": {
        "src": "contracts\\EnergyGridUpgradeableV2.sol:11",
        "version": {
          "withMetadata": "93c75e7de19a81b31f92599d0e66ccc190952f20981eb59299545de677decf5d",
          "withoutMetadata": "8e37071490250f12323095a12ceb051cdff1b68bf3af5ce69f2401eccf1e95d8",
          "linkedWithoutMetadata": "8e37071490250f12323095a12ceb051cdff1b68bf3af5ce69f2401eccf1e95d8"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "StringUtils"
        ],
        "methods": [
          "(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "balanceOf(address)",
          "owner()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnergyGridUpgradeableV2",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:68"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:69"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:70"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:71"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:72"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:73"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:74"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)839_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:77"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)848_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:78"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)861_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)839_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)848_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)861_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)839_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:88"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)848_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:89"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)861_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:90"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)839_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.Grid)"
            },
            "t_struct(Grid)839_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)848_storage)": {
              "label": "mapping(address => struct EnergyGridUpgradeableV2.Users)"
            },
            "t_struct(Users)848_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)861_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)861_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)839_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)848_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)861_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:4",
        "version": {
          "withMetadata": "41a2b282b275b363186d784fb0ba5a0b92961655271bddbc29c39469324e81c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "a6cbce6d7751f1a24573c29d3518dd5ade7eb6970aa8980f15d1445258fc29f8",
          "withoutMetadata": "271f71d871f454ee6d6bc324c18f123427230d69bc32732321fca0a4c0071a8f",
          "linkedWithoutMetadata": "271f71d871f454ee6d6bc324c18f123427230d69bc32732321fca0a4c0071a8f"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "energyidset(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:23"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "49304118c2c0447a2386847739d6d047ec85004a7baa3833ea84ba02ad7fbce5",
          "withoutMetadata": "fd3dd490f187694608997602fb082c2071d077d5e25426ccfd7853ae9207d644",
          "linkedWithoutMetadata": "fd3dd490f187694608997602fb082c2071d077d5e25426ccfd7853ae9207d644"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:23"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "cb0ed37d7d3ea8b4c47476725107deade3c89535e4c43c271b5735da495366f6",
          "withoutMetadata": "f9ccc4c461e0fa117572583d91bb58cc806b4f896e27111a4e42293c62a60a7c",
          "linkedWithoutMetadata": "f9ccc4c461e0fa117572583d91bb58cc806b4f896e27111a4e42293c62a60a7c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1493_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1502_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1515_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1493_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:77"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1502_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:78"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1515_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1493_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1502_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1515_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1493_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1493_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1502_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1502_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1515_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1515_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)1493_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1502_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1515_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "30662d973f3b403a35ec8b8f60b46a281b9a08d8621556828bce2b81b9366fd6",
          "withoutMetadata": "fd3dd490f187694608997602fb082c2071d077d5e25426ccfd7853ae9207d644",
          "linkedWithoutMetadata": "fd3dd490f187694608997602fb082c2071d077d5e25426ccfd7853ae9207d644"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:24"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "d4d4f1b65ed73c1f4e6b243fcc8fabce93e9fbf5414421b208de68d556fd8874",
          "withoutMetadata": "90fa9d48ef59c95700a0a4a3285ae22fb99938ff7bface91c33feaf2bc6f5086",
          "linkedWithoutMetadata": "90fa9d48ef59c95700a0a4a3285ae22fb99938ff7bface91c33feaf2bc6f5086"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1497_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1506_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1519_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1497_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:77"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1506_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:78"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1519_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1497_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1506_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1519_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1497_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1497_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1506_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1506_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1519_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1519_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)1497_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1506_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1519_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "49304118c2c0447a2386847739d6d047ec85004a7baa3833ea84ba02ad7fbce5",
          "withoutMetadata": "fd3dd490f187694608997602fb082c2071d077d5e25426ccfd7853ae9207d644",
          "linkedWithoutMetadata": "fd3dd490f187694608997602fb082c2071d077d5e25426ccfd7853ae9207d644"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:23"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "a6eea9bb6e396adb3d7c57016d92ca4203bcd7045515389b9edd7a8c33f842b8",
          "withoutMetadata": "f9ccc4c461e0fa117572583d91bb58cc806b4f896e27111a4e42293c62a60a7c",
          "linkedWithoutMetadata": "f9ccc4c461e0fa117572583d91bb58cc806b4f896e27111a4e42293c62a60a7c"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1493_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1502_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1515_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1493_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:77"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1502_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:78"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1515_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1493_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1502_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1515_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1493_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1493_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1502_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1502_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1515_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1515_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)1493_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1502_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1515_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "132f7b802f43482e5fc3a106352f8af192846391aa5cee43587ca3a5ab2ddcd0",
          "withoutMetadata": "764d7305fbe671e122c1d7bb5061f61375a51ddaf4e0f1a00467059b37f2dec3",
          "linkedWithoutMetadata": "764d7305fbe671e122c1d7bb5061f61375a51ddaf4e0f1a00467059b37f2dec3"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:23"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "50d4206d4a2d22f364604ce0461e501947242b8ff710b2d80c6a42bf48fc0c92",
          "withoutMetadata": "867d85be038274c0ee3ac4725e1bfc7bcbf1c6d4cb6f25979e73929481ee3860",
          "linkedWithoutMetadata": "867d85be038274c0ee3ac4725e1bfc7bcbf1c6d4cb6f25979e73929481ee3860"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1485_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1494_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1507_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1485_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:77"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1494_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:78"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1507_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1485_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1494_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1507_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1485_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1485_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1494_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1494_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1507_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1507_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)1485_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1494_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1507_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "82fe7178602cfd853a81483ea48ba4098c685b4ee2b729e600d6a04fd22b1a99",
          "withoutMetadata": "764d7305fbe671e122c1d7bb5061f61375a51ddaf4e0f1a00467059b37f2dec3",
          "linkedWithoutMetadata": "764d7305fbe671e122c1d7bb5061f61375a51ddaf4e0f1a00467059b37f2dec3"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:25"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "d1f95a0da092e91103f6654d7066c704a26e987aa737c022da74244ab96b5387",
          "withoutMetadata": "36519ae6c67516c27220267c8bd10e8d219cd02d480588e5d3bffedf29421aa2",
          "linkedWithoutMetadata": "36519ae6c67516c27220267c8bd10e8d219cd02d480588e5d3bffedf29421aa2"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1493_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1502_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1515_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1493_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1502_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:80"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1515_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1493_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1502_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:85"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1515_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1493_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1493_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1502_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1502_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1515_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1515_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)1493_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1502_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1515_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "b89e621894e9221d5539bf4da48d607c08c6efdd459925f80604faf47ae74df6",
          "withoutMetadata": "890bd8e880b0bc05a3df39361c3cdf469c390a25b3cd44e2ebaabddd44d11810",
          "linkedWithoutMetadata": "890bd8e880b0bc05a3df39361c3cdf469c390a25b3cd44e2ebaabddd44d11810"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:17"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "8d1c20b113531476a98bab0393dafad8dfb369187ed866a9d20a07782e878ea2",
          "withoutMetadata": "812df72cf98365544b3c6492e0a6b49edd9de3dde985330c219a52d44e120637",
          "linkedWithoutMetadata": "812df72cf98365544b3c6492e0a6b49edd9de3dde985330c219a52d44e120637"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1493_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1502_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1515_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1493_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:80"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1502_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1515_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1493_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:85"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1502_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1515_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1493_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1493_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1502_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1502_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1515_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1515_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)1493_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1502_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1515_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "985fe99ceb699409ce795a6a07195685aaec5beb163906be8bde48ccaa794f03",
          "withoutMetadata": "904d2a43872e9289265ef8ffd34ebcc39d1bf1b63d92434727acf69a708e1f1d",
          "linkedWithoutMetadata": "904d2a43872e9289265ef8ffd34ebcc39d1bf1b63d92434727acf69a708e1f1d"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "4071d66e6ecf524e493fd00f0707a2bb568b33a549208b39dfae7e7069c62358",
          "withoutMetadata": "d40fcb0d5623b42f3f56162476a063ee93d762589010b86044a7040bc0790b75",
          "linkedWithoutMetadata": "d40fcb0d5623b42f3f56162476a063ee93d762589010b86044a7040bc0790b75"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1315_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1324_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1337_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1315_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:80"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1324_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1337_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1315_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:85"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1324_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1337_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1315_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1315_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1324_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1324_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1337_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1337_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)1315_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1324_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1337_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "0a171b8d0ac16640c1f882e576468be1e8d25f98ac39a002d19b00301d89e5a9",
          "withoutMetadata": "6d1ad2561a6849ac044dabf58dda8ffb4b5e877650e6126143338053833872a9",
          "linkedWithoutMetadata": "6d1ad2561a6849ac044dabf58dda8ffb4b5e877650e6126143338053833872a9"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1315_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1324_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1337_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:56"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1315_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1324_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1337_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1315_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1324_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1337_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:89"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1315_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1315_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1324_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1324_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1337_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1337_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1315_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1324_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1337_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "7251689d4f1266f82e25689d33e156ff8a2aa3deb47cce9e151e6b0f1d1c3ef9",
          "withoutMetadata": "4db87fc3155e33fb108e633ae48a20a25b0b58aaa0a246389bec8f2b80bf808d",
          "linkedWithoutMetadata": "4db87fc3155e33fb108e633ae48a20a25b0b58aaa0a246389bec8f2b80bf808d"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "40e85d823097f6b89bed531a35fd4bb2327c70e00af69031222459dafbc9a2f6",
          "withoutMetadata": "e17eb447f8e4376a8ac43144d13ae7c704f1a37527730d6fc19485d20af88ef6",
          "linkedWithoutMetadata": "e17eb447f8e4376a8ac43144d13ae7c704f1a37527730d6fc19485d20af88ef6"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1505_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1514_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1527_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:56"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1505_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1514_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1527_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1505_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1514_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1527_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:89"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1505_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1505_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1514_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1514_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1527_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1527_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1505_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1514_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1527_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "f433fdf501a73ef60c80232b868e1f9cac71c548a701dbb4e1d3b33021fca56e",
          "withoutMetadata": "d0fd45089c3a4f75f502f484f76a3f5f7becf51d37c7f0f8d3338186b18688d2",
          "linkedWithoutMetadata": "d0fd45089c3a4f75f502f484f76a3f5f7becf51d37c7f0f8d3338186b18688d2"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "dfce2dbaa90ccb5b4bc3e63d0c41da4faf0433951ff5db4913e9c58e900ecb80",
          "withoutMetadata": "fc41efa6a5dc794767c46d314fe381581d4d72770e4b0aea6d888b21a54f3b82",
          "linkedWithoutMetadata": "fc41efa6a5dc794767c46d314fe381581d4d72770e4b0aea6d888b21a54f3b82"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1501_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1510_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1523_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:56"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1501_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1510_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1523_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1501_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1510_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1523_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:89"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1501_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1501_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1510_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1510_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1523_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1523_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1501_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1510_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1523_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "f032bfdba9801500ed5490f3b1cec0fb865a270508b9d82f27f18a1d1e1af566",
          "withoutMetadata": "4a816e8632c9e819ccbcbc59d1c75de4982b2fb24e65d168812702fc54f196a9",
          "linkedWithoutMetadata": "4a816e8632c9e819ccbcbc59d1c75de4982b2fb24e65d168812702fc54f196a9"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "ownerpick(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "80f54dab6c25d9bec5c1c476c77abb9c2811169969d2b2218e79b77c77c04bea",
          "withoutMetadata": "28984b27c5f4bb1020a8cc78e3cde37bf55b49a3fd7ef1b3129da079d2d4bd70",
          "linkedWithoutMetadata": "28984b27c5f4bb1020a8cc78e3cde37bf55b49a3fd7ef1b3129da079d2d4bd70"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "ownerpick(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1505_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1514_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1527_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:56"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1505_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1514_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1527_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1505_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1514_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1527_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:89"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1505_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1505_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1514_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1514_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1527_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1527_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1505_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1514_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1527_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergySecondUpgrade": {
        "src": "contracts\\EnergySecondUpgrade.sol:10",
        "version": {
          "withMetadata": "fed9afebab0a4868bfd7de939c17af4be5641d751505f166f514beddf6f3c152",
          "withoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d",
          "linkedWithoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergySecondUpgrade.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergySecondUpgrade.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergySecondUpgrade",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergySecondUpgrade.sol:14"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergySecondUpgrade.sol:16"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergySecondUpgrade.sol:18"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergySecondUpgrade.sol:19"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergySecondUpgrade.sol:20"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergySecondUpgrade.sol:21"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergySecondUpgrade.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "6f0ee7d3f042e88efbc67b3e6a7e7c29449a280056751d2d98c8a79aaf53f693",
          "withoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d",
          "linkedWithoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "4693c0005f995e59cbcba6add4d4957b87534e90111b64567293d7906633dcaa",
          "withoutMetadata": "b3f7a2417b914f3ec96a9b12dcfdfb95306a50c6fbca2b7bad01ae795b818d75",
          "linkedWithoutMetadata": "b3f7a2417b914f3ec96a9b12dcfdfb95306a50c6fbca2b7bad01ae795b818d75"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "initialize(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1690_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1699_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1712_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:56"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1690_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1699_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1712_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1690_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1699_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1712_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:89"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1690_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1690_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1699_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1699_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1712_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1712_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1690_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1699_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1712_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "88c5c33f560ff4dc0547c669255107684dcd7c9e1b645011dbe7da7663fc4ed1",
          "withoutMetadata": "cb45791e5e2c5a4b9eed4fe0d48042d1f25aeef5f29dd0a795192c9144bda0e3",
          "linkedWithoutMetadata": "cb45791e5e2c5a4b9eed4fe0d48042d1f25aeef5f29dd0a795192c9144bda0e3"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "store(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "b899df03fa1afb76f3544bbe8c9c31800f9a17ed08a092e227af5822285a9def",
          "withoutMetadata": "4b5f44e3c2836326c1c1d175b631b6d8ca1b4a070e19c983c64ab970565c01e9",
          "linkedWithoutMetadata": "4b5f44e3c2836326c1c1d175b631b6d8ca1b4a070e19c983c64ab970565c01e9"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "store(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1506_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1515_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1528_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:56"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1506_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1515_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1528_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1506_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1515_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1528_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:89"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1506_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1506_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1515_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1515_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1528_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1528_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1506_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1515_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1528_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:14",
        "version": {
          "withMetadata": "4165de93611fb2e8e4ba40eacbb1eb7403f72a522e97fbadc3dd0fdbbdf82940",
          "withoutMetadata": "d820f052f7a1e2ff8a77533cb91fc72a12f7d9bd7fcdeec785f77d8afdffbf99",
          "linkedWithoutMetadata": "d820f052f7a1e2ff8a77533cb91fc72a12f7d9bd7fcdeec785f77d8afdffbf99"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "initialize(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:27"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1330_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1339_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1352_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:38"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:49"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:56"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1330_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1339_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1352_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1330_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1339_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1352_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:89"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1330_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1330_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1339_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1339_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1352_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1352_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1330_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1339_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1352_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "1a55598391090066755e294559c6ac76546382ceda43afd4abbd2818c9ce432f",
          "withoutMetadata": "8306ef783837f195e2f7787ec1cd6969e0082b73e4ef7675e37af33c19a33535",
          "linkedWithoutMetadata": "8306ef783837f195e2f7787ec1cd6969e0082b73e4ef7675e37af33c19a33535"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnergyTokenUpgradeable",
            "src": "contracts\\EnergyTokenUpgradeable.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "b2b362013897dea7c0653d778fd5ed23b2292edaabf5a5b3450c30cd26c1447b",
          "withoutMetadata": "311830518784316db972868c97ffa645ada549acb1c476509795d6dd3afb19b3",
          "linkedWithoutMetadata": "311830518784316db972868c97ffa645ada549acb1c476509795d6dd3afb19b3"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "1574547a9b29d4cd0a4ad7b95c0e82653614a4e5293bb2ae198afcb4dc9105bb",
          "withoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d",
          "linkedWithoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "6fb833b28dfd9356b09920d2d2c2d53be30782929f985406ef7a6fdc57b426ef",
          "withoutMetadata": "311830518784316db972868c97ffa645ada549acb1c476509795d6dd3afb19b3",
          "linkedWithoutMetadata": "311830518784316db972868c97ffa645ada549acb1c476509795d6dd3afb19b3"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:13",
        "version": {
          "withMetadata": "efdf260eee6362a7208de2e578c4aa32dfd2f764ea063ce4823f004cf3dd4d61",
          "withoutMetadata": "d820f052f7a1e2ff8a77533cb91fc72a12f7d9bd7fcdeec785f77d8afdffbf99",
          "linkedWithoutMetadata": "d820f052f7a1e2ff8a77533cb91fc72a12f7d9bd7fcdeec785f77d8afdffbf99"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "initialize(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1504_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1513_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1526_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1504_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1513_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1526_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1504_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1513_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1526_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1504_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1504_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1513_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1513_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1526_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1526_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1504_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1513_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1526_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergySecondUpgrade": {
        "src": "contracts\\EnergySecondUpgrade.sol:10",
        "version": {
          "withMetadata": "91e86451745a0255a59bc10c68743c6e0b809198d269a61e70244f7dd8c83f0d",
          "withoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d",
          "linkedWithoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergySecondUpgrade.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergySecondUpgrade.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergySecondUpgrade",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergySecondUpgrade.sol:14"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergySecondUpgrade.sol:16"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergySecondUpgrade.sol:18"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergySecondUpgrade.sol:19"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergySecondUpgrade.sol:20"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergySecondUpgrade.sol:21"
            },
            {
              "contract": "EnergySecondUpgrade",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergySecondUpgrade.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV4": {
        "src": "contracts\\EnergySecondUpgrade.sol:10",
        "version": {
          "withMetadata": "ca124c397aed9e53ec9119622cccfba489122c47a3c942b39308da7f28b5e20c",
          "withoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d",
          "linkedWithoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergySecondUpgrade.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergySecondUpgrade.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV4",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergySecondUpgrade.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeableV4",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergySecondUpgrade.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeableV4",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergySecondUpgrade.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeableV4",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergySecondUpgrade.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV4",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergySecondUpgrade.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeableV4",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergySecondUpgrade.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV4",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergySecondUpgrade.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeableV2": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:13",
        "version": {
          "withMetadata": "55813f6365f671aab6c8730e5653d9ba26a1fd416ee09e659d489ca6ee0fda31",
          "withoutMetadata": "b3f7a2417b914f3ec96a9b12dcfdfb95306a50c6fbca2b7bad01ae795b818d75",
          "linkedWithoutMetadata": "b3f7a2417b914f3ec96a9b12dcfdfb95306a50c6fbca2b7bad01ae795b818d75"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "initialize(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1506_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1515_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1528_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1506_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)1515_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1528_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1506_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1515_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1528_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1506_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.Grid)"
            },
            "t_struct(Grid)1506_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1515_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeableV2.Users)"
            },
            "t_struct(Users)1515_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1528_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1528_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1506_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)1515_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1528_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:13",
        "version": {
          "withMetadata": "c4c222d729dbae15fa831132fef5a69711c2bac79b1e30032432ae51cd9535ee",
          "withoutMetadata": "b3f7a2417b914f3ec96a9b12dcfdfb95306a50c6fbca2b7bad01ae795b818d75",
          "linkedWithoutMetadata": "b3f7a2417b914f3ec96a9b12dcfdfb95306a50c6fbca2b7bad01ae795b818d75"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "initialize(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1329_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1338_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1351_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "initialbalance",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:47"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1329_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newuserregistered",
              "type": "t_struct(Users)1338_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1351_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1329_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1338_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1351_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1329_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.Grid)"
            },
            "t_struct(Grid)1329_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1338_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeable.Users)"
            },
            "t_struct(Users)1338_storage": {
              "label": "struct EnergyTokenUpgradeable.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1351_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1351_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1329_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid[]"
            },
            "t_array(t_struct(Users)1338_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1351_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:13",
        "version": {
          "withMetadata": "ec82ff16954c5837a1ceaf89c6920b34a4daa963bb11713975f9d141cbae8a80",
          "withoutMetadata": "52fe5cc283662e34423dfdd332e2b056a5bd2ceffaf71f9577cf485eab6e07c0",
          "linkedWithoutMetadata": "52fe5cc283662e34423dfdd332e2b056a5bd2ceffaf71f9577cf485eab6e07c0"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "initialize(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1327_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1336_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1349_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1327_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newuserregistered",
              "type": "t_struct(Users)1336_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1349_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1327_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1336_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1349_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1327_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.Grid)"
            },
            "t_struct(Grid)1327_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1336_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeable.Users)"
            },
            "t_struct(Users)1336_storage": {
              "label": "struct EnergyTokenUpgradeable.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1349_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1349_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1327_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid[]"
            },
            "t_array(t_struct(Users)1336_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1349_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:13",
        "version": {
          "withMetadata": "a0032932ae835250a2936bbf9e1e099738fa4d586f08399f6dc4243f5015a294",
          "withoutMetadata": "933c4e6ecd41c971b825ced5653dd2711e326eacbff72724db247e042ce0c11e",
          "linkedWithoutMetadata": "933c4e6ecd41c971b825ced5653dd2711e326eacbff72724db247e042ce0c11e"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "initialize(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1327_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1336_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1349_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1327_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newuserregistered",
              "type": "t_struct(Users)1336_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1349_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1327_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1336_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1349_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1327_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.Grid)"
            },
            "t_struct(Grid)1327_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1336_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeable.Users)"
            },
            "t_struct(Users)1336_storage": {
              "label": "struct EnergyTokenUpgradeable.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1349_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1349_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1327_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid[]"
            },
            "t_array(t_struct(Users)1336_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1349_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:13",
        "version": {
          "withMetadata": "ec82ff16954c5837a1ceaf89c6920b34a4daa963bb11713975f9d141cbae8a80",
          "withoutMetadata": "52fe5cc283662e34423dfdd332e2b056a5bd2ceffaf71f9577cf485eab6e07c0",
          "linkedWithoutMetadata": "52fe5cc283662e34423dfdd332e2b056a5bd2ceffaf71f9577cf485eab6e07c0"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "initialize(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1327_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1336_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1349_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1327_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newuserregistered",
              "type": "t_struct(Users)1336_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1349_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1327_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1336_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1349_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1327_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.Grid)"
            },
            "t_struct(Grid)1327_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1336_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeable.Users)"
            },
            "t_struct(Users)1336_storage": {
              "label": "struct EnergyTokenUpgradeable.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1349_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1349_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1327_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid[]"
            },
            "t_array(t_struct(Users)1336_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1349_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:13",
        "version": {
          "withMetadata": "23e47428c78eeb27c1027b20f4c56163c9ecc706e1cf0224bc3c9e5a3e9fecb7",
          "withoutMetadata": "e061b8a10829d94212b715445bc12178055928fdbf6f023b85be4cdfab5255b8",
          "linkedWithoutMetadata": "e061b8a10829d94212b715445bc12178055928fdbf6f023b85be4cdfab5255b8"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "StringUtils"
        ],
        "methods": [
          "initialize(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_totalSupply",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:25"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)1327_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)1336_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1349_storage)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:37"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:39"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:40"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:41"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:42"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:43"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:44"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:45"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:46"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:48"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:50"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:51"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:52"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:53"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:54"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:55"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newenergygrid",
              "type": "t_struct(Grid)1327_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:81"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "newuserregistered",
              "type": "t_struct(Users)1336_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)1349_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)1327_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:86"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)1336_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:87"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)1349_storage)dyn_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:88"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)1327_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.Grid)"
            },
            "t_struct(Grid)1327_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)1336_storage)": {
              "label": "mapping(address => struct EnergyTokenUpgradeable.Users)"
            },
            "t_struct(Users)1336_storage": {
              "label": "struct EnergyTokenUpgradeable.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)1349_storage)": {
              "label": "mapping(uint256 => struct EnergyTokenUpgradeable.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)1349_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint8": {
              "label": "uint8"
            },
            "t_array(t_struct(Grid)1327_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Grid[]"
            },
            "t_array(t_struct(Users)1336_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)1349_storage)dyn_storage": {
              "label": "struct EnergyTokenUpgradeable.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeableV2.sol:10",
        "version": {
          "withMetadata": "d60e20bf6bdb502d019c1eb79c9e8040149f4b695ce9e804463bbe4b25a35e37",
          "withoutMetadata": "f0586eaed950b3f46cbeb8a002bfef8ade1f07bb6a30d261b8fe55cba57831b4",
          "linkedWithoutMetadata": "f0586eaed950b3f46cbeb8a002bfef8ade1f07bb6a30d261b8fe55cba57831b4"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeableV2.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "81aec79cc1c10d57c482b90db7badc6e50e3dd590c5bfe345fed77da66eb0a2f",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnergyGridUpgradeableV2": {
        "src": "contracts\\EnergyGridUpgradeableV2.sol:11",
        "version": {
          "withMetadata": "a0be40c5b55c2bfb675cce9c84a9cf24ffe3593095c9d63aecb422bca1f238c0",
          "withoutMetadata": "c71371ebcbea22468f755312086105af9181a66a4c761962fe5bd8ecfdee8672",
          "linkedWithoutMetadata": "c71371ebcbea22468f755312086105af9181a66a4c761962fe5bd8ecfdee8672"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "StringUtils"
        ],
        "methods": [
          "(address)",
          "payfee(address payable,uint256)",
          "registerenergyusername(string,address payable)",
          "registergrid(uint256)",
          "_checkuserregistered(address payable)",
          "_checkgridregistered(uint256)",
          "_checkuseringrid(uint256,address)",
          "selectBasic()",
          "selectPremium()",
          "selectHybrid()",
          "stakeprevrewards()",
          "choosegridtostake(uint256,address payable,uint256)",
          "balanceOf(address)",
          "owner()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "totalSupply()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EnergyGridUpgradeableV2",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:100"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basic",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premium",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybrid",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "basicchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "premiumchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "hybridchosen",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevrewards",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalgridtokensupply",
            "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basic",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:17"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premium",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:18"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybrid",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:19"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "basicchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:20"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "premiumchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:21"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "hybridchosen",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:22"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userchoicename",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:23"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "setprevrewards",
              "type": "t_bool",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:24"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "servicechosen",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:26"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:28"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:29"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:30"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:31"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:32"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:33"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:34"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "amounttostake",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:35"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_gridstaked",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:36"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "totalgridtokensupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:61"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:68"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridcheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:69"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "prev_rewards",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:70"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfodetail",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:71"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "gridsused",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:72"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersinallgrid",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:73"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "paidforgridusage",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:74"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "_energygrids",
              "type": "t_mapping(t_uint256,t_struct(Grid)2039_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:77"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "userlist",
              "type": "t_mapping(t_address,t_struct(Users)2048_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:78"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridlist",
              "type": "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)2061_storage)",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:79"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newenergygrid",
              "type": "t_struct(Grid)2039_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:82"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "newuserregistered",
              "type": "t_struct(Users)2048_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:83"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "useringridinfo",
              "type": "t_struct(UserInEnergyGridInfo)2061_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:84"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "energygridregistered",
              "type": "t_array(t_struct(Grid)2039_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:88"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersregistered",
              "type": "t_array(t_struct(Users)2048_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:89"
            },
            {
              "contract": "EnergyGridUpgradeableV2",
              "label": "usersingridinfo",
              "type": "t_array(t_struct(UserInEnergyGridInfo)2061_storage)dyn_storage",
              "src": "contracts\\EnergyGridUpgradeableV2.sol:90"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Grid)2039_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.Grid)"
            },
            "t_struct(Grid)2039_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid",
              "members": [
                {
                  "label": "gridid",
                  "type": "t_uint256"
                },
                {
                  "label": "gridcount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Users)2048_storage)": {
              "label": "mapping(address => struct EnergyGridUpgradeableV2.Users)"
            },
            "t_struct(Users)2048_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users",
              "members": [
                {
                  "label": "useraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "username",
                  "type": "t_string_storage"
                },
                {
                  "label": "userpoint",
                  "type": "t_uint256"
                },
                {
                  "label": "userbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(UserInEnergyGridInfo)2061_storage)": {
              "label": "mapping(uint256 => struct EnergyGridUpgradeableV2.UserInEnergyGridInfo)"
            },
            "t_struct(UserInEnergyGridInfo)2061_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo",
              "members": [
                {
                  "label": "energygridid",
                  "type": "t_uint256"
                },
                {
                  "label": "usersingridaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gridfunctioning",
                  "type": "t_bool"
                },
                {
                  "label": "gridreputationscore",
                  "type": "t_uint256"
                },
                {
                  "label": "griduserscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Grid)2039_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Grid[]"
            },
            "t_array(t_struct(Users)2048_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.Users[]"
            },
            "t_array(t_struct(UserInEnergyGridInfo)2061_storage)dyn_storage": {
              "label": "struct EnergyGridUpgradeableV2.UserInEnergyGridInfo[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "6be0eac84e2f0d0331e519a2faddc2c5d4979b927f46a5d3c17b38ccc4958279",
          "withoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d",
          "linkedWithoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:4",
        "version": {
          "withMetadata": "41a2b282b275b363186d784fb0ba5a0b92961655271bddbc29c39469324e81c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "VRFConsumerBase": {
        "src": "@chainlink\\contracts\\src\\v0.8\\VRFConsumerBase.sol:101",
        "inherit": [
          "VRFRequestIDBase"
        ],
        "libraries": [],
        "methods": [
          "rawFulfillRandomness(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBase",
            "src": "@chainlink\\contracts\\src\\v0.8\\VRFConsumerBase.sol:196"
          },
          {
            "kind": "state-variable-immutable",
            "name": "LINK",
            "src": "@chainlink\\contracts\\src\\v0.8\\VRFConsumerBase.sol:182"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink\\contracts\\src\\v0.8\\VRFConsumerBase.sol:183"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VRFConsumerBase",
              "label": "nonces",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "@chainlink\\contracts\\src\\v0.8\\VRFConsumerBase.sol:188"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "VRFRequestIDBase": {
        "src": "@chainlink\\contracts\\src\\v0.8\\VRFRequestIDBase.sol:4",
        "version": {
          "withMetadata": "a48c9c69dc48a2d04bc282f25dff52eaae99976f880138a119006201c86e9793",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "src": "contracts\\interfaces\\LinkTokenInterface.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:9"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "c1f58b261d8d202dda1a20efe33cb90d7a26d21b251a331fb6bdba4fd6269180",
          "withoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa",
          "linkedWithoutMetadata": "7d2a9f99159bb217470d71370e0b19d758f70d2d11ba803dd01d1c18860379aa"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)45_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:362"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\math\\SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "4e3e1cdf0ac7c8b19133a3d9196957fe07a2517c4f3eaba6d14e991c8f076ade",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:19",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34",
        "version": {
          "withMetadata": "81aec79cc1c10d57c482b90db7badc6e50e3dd590c5bfe345fed77da66eb0a2f",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:18",
        "version": {
          "withMetadata": "c7e55570ed3793cb2fdb342a08d64ed665052848eb85fe58297b02782ee6884f",
          "withoutMetadata": "2ccd76f4c5ce03ed882002d611cb02f9f30f51bccdc54aa4c53da23295df37cf",
          "linkedWithoutMetadata": "2ccd76f4c5ce03ed882002d611cb02f9f30f51bccdc54aa4c53da23295df37cf"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:23"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:26"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:29"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:32"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:35"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:38"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:10",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721URIStorage",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:11",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "77dff2ca7c60a2e62ef22b99668197f9778639079f274d439253a847bc4fbfa3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:8",
        "version": {
          "withMetadata": "0cfb4c50f0ac0c13e0547ecd2db02c27c9451e69f329a7c1deacab578fda3405",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:21",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\SafeMath.sol:4",
        "version": {
          "withMetadata": "41a2b282b275b363186d784fb0ba5a0b92961655271bddbc29c39469324e81c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AdvancedCollectible": {
        "src": "contracts\\AdvancedCollectible.sol:7",
        "version": {
          "withMetadata": "9303dfd936d0d7a51f369d32e9df6cfde79639e9cab720415eb8c1ec7382383d",
          "withoutMetadata": "930e9cd4a54c464bfe65e046eb7c90d4e0ba3e5a83b6eb965c4bbaddc1617f39",
          "linkedWithoutMetadata": "930e9cd4a54c464bfe65e046eb7c90d4e0ba3e5a83b6eb965c4bbaddc1617f39"
        },
        "inherit": [
          "VRFConsumerBase",
          "VRFRequestIDBase",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes32)",
          "createCollectible(string)",
          "setTokenURI(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AdvancedCollectible",
            "src": "contracts\\AdvancedCollectible.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AdvancedCollectible",
              "label": "tokenCounter",
              "type": "t_uint256",
              "src": "contracts\\AdvancedCollectible.sol:8"
            },
            {
              "contract": "AdvancedCollectible",
              "label": "requestIdToSender",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts\\AdvancedCollectible.sol:11"
            },
            {
              "contract": "AdvancedCollectible",
              "label": "requestIdToTokenURI",
              "type": "t_mapping(t_bytes32,t_string_storage)",
              "src": "contracts\\AdvancedCollectible.sol:12"
            },
            {
              "contract": "AdvancedCollectible",
              "label": "tokenIdToBreed",
              "type": "t_mapping(t_uint256,t_enum(Breed)4209)",
              "src": "contracts\\AdvancedCollectible.sol:13"
            },
            {
              "contract": "AdvancedCollectible",
              "label": "requestIdToTokenId",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts\\AdvancedCollectible.sol:14"
            },
            {
              "contract": "AdvancedCollectible",
              "label": "keyHash",
              "type": "t_bytes32",
              "src": "contracts\\AdvancedCollectible.sol:18"
            },
            {
              "contract": "AdvancedCollectible",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts\\AdvancedCollectible.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_enum(Breed)4209)": {
              "label": "mapping(uint256 => enum AdvancedCollectible.Breed)"
            },
            "t_enum(Breed)4209": {
              "label": "enum AdvancedCollectible.Breed",
              "members": [
                "PUG",
                "SHIBA_INU",
                "ST_BERNARD"
              ]
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Challenge": {
        "src": "contracts\\Challenge.sol:72",
        "version": {
          "withMetadata": "a11ad6904cc351b7367b8627155261e6eceac37d4c88185a2cffd8854300d88f",
          "withoutMetadata": "73d9e2289047c852e352fd3851430c9aa40ef8e9e783858275eb891b265c5257",
          "linkedWithoutMetadata": "73d9e2289047c852e352fd3851430c9aa40ef8e9e783858275eb891b265c5257"
        },
        "inherit": [
          "Incrementor"
        ],
        "libraries": [],
        "methods": [
          "()",
          "incrementX(address,uint256)",
          "incrementY(address,uint256)",
          "incrementZ(address,uint256)",
          "isContract(address)",
          "TestifContract(address)",
          "addressToUint256(address)",
          "uint256ToAddress(uint256)",
          "convertfromuinttobytes(uint256)",
          "toBytes(address)",
          "bytesToAddress(bytes)",
          "isHuman(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\Challenge.sol:101"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\Challenge.sol:122"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\Challenge.sol:139"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenowner",
            "src": "contracts\\Challenge.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_inc",
            "src": "contracts\\Challenge.sol:84"
          },
          {
            "kind": "state-variable-assignment",
            "name": "Incrementoraddress",
            "src": "contracts\\Challenge.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Challenge",
              "label": "tokenowner",
              "type": "t_address",
              "src": "contracts\\Challenge.sol:75"
            },
            {
              "contract": "Challenge",
              "label": "y",
              "type": "t_uint256",
              "src": "contracts\\Challenge.sol:78"
            },
            {
              "contract": "Challenge",
              "label": "z",
              "type": "t_uint256",
              "src": "contracts\\Challenge.sol:79"
            },
            {
              "contract": "Challenge",
              "label": "x",
              "type": "t_uint256",
              "src": "contracts\\Challenge.sol:80"
            },
            {
              "contract": "Challenge",
              "label": "_inc",
              "type": "t_contract(Incrementor)4446",
              "src": "contracts\\Challenge.sol:84"
            },
            {
              "contract": "Challenge",
              "label": "Incrementoraddress",
              "type": "t_address",
              "src": "contracts\\Challenge.sol:86"
            },
            {
              "contract": "Challenge",
              "label": "factory",
              "type": "t_address",
              "src": "contracts\\Challenge.sol:88"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_contract(Incrementor)4446": {
              "label": "contract Incrementor"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Incrementor": {
        "src": "contracts\\Challenge.sol:34",
        "version": {
          "withMetadata": "2f6f66aa6443e671dff38f682e9d633c6649942f8b289a19530bdbd767b6b5ca",
          "withoutMetadata": "180010f2abd8d7addc5ba2ca809cc84b7232e4df30bdf06281789bd34815bff8",
          "linkedWithoutMetadata": "180010f2abd8d7addc5ba2ca809cc84b7232e4df30bdf06281789bd34815bff8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "incrementX(uint256)",
          "incrementY(uint256)",
          "incrementZ(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "incrementaddress",
            "src": "contracts\\Challenge.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Incrementor",
              "label": "y",
              "type": "t_uint256",
              "src": "contracts\\Challenge.sol:38"
            },
            {
              "contract": "Incrementor",
              "label": "z",
              "type": "t_uint256",
              "src": "contracts\\Challenge.sol:39"
            },
            {
              "contract": "Incrementor",
              "label": "x",
              "type": "t_uint256",
              "src": "contracts\\Challenge.sol:40"
            },
            {
              "contract": "Incrementor",
              "label": "incrementaddress",
              "type": "t_address",
              "src": "contracts\\Challenge.sol:45"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "EnergyTokenUpgradeable": {
        "src": "contracts\\EnergyTokenUpgradeable.sol:10",
        "version": {
          "withMetadata": "ffdb806fa60013023cb96ea42cf4451335f109be7fd34de70a3c1bdbc7db48a9",
          "withoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d",
          "linkedWithoutMetadata": "5172a576efe5e5de8287193cc4e2a1b92b9024118d72eb90275903b67908987d"
        },
        "inherit": [
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address)",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\EnergyTokenUpgradeable.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\EnergyTokenUpgradeable.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\EnergyTokenUpgradeable.sol:14"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts\\EnergyTokenUpgradeable.sol:16"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "contracts\\EnergyTokenUpgradeable.sol:18"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:19"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\EnergyTokenUpgradeable.sol:20"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_decimals",
              "type": "t_uint8",
              "src": "contracts\\EnergyTokenUpgradeable.sol:21"
            },
            {
              "contract": "EnergyTokenUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\EnergyTokenUpgradeable.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Migrations": {
        "src": "contracts\\Migrations.sol:3",
        "version": {
          "withMetadata": "1a4efe85449fcce1c16ce3abcb274f65c81d2dd31b4791cb4ca5f415d72c5ca8",
          "withoutMetadata": "914ab0ddaae306ed851c9336c6fd1fd86fd286cb80089a96bc055edbb9543985",
          "linkedWithoutMetadata": "914ab0ddaae306ed851c9336c6fd1fd86fd286cb80089a96bc055edbb9543985"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setCompleted(uint256)",
          "upgrade(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Migrations",
            "src": "contracts\\Migrations.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Migrations",
              "label": "owner",
              "type": "t_address",
              "src": "contracts\\Migrations.sol:4"
            },
            {
              "contract": "Migrations",
              "label": "last_completed_migration",
              "type": "t_uint256",
              "src": "contracts\\Migrations.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Oracle": {
        "src": "contracts\\Oracle.sol:2",
        "version": {
          "withMetadata": "e7ef92361e087d9e3c072ac7f1a7a38751e70d9362acdb938d04332d00fe826f",
          "withoutMetadata": "1fc6bb9b99f36b43efac93fdd8c1397d02dbc74ba466b84765b59c3ae4c5fdb6",
          "linkedWithoutMetadata": "1fc6bb9b99f36b43efac93fdd8c1397d02dbc74ba466b84765b59c3ae4c5fdb6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "feedRandomness(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "contracts\\Oracle.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Oracle",
              "label": "admin",
              "type": "t_address",
              "src": "contracts\\Oracle.sol:3"
            },
            {
              "contract": "Oracle",
              "label": "rand",
              "type": "t_uint256",
              "src": "contracts\\Oracle.sol:4"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RandomSVG": {
        "src": "contracts\\RandomSVG.sol:10",
        "version": {
          "withMetadata": "73624e6e4bb5386bc685ac41a6113677f94f52e65a0c4cc88cfb976a9ef0b456",
          "withoutMetadata": "99f692103f3829446084cdd44ecc076fb9c5f73fe21a7f47056de53b0fe25414",
          "linkedWithoutMetadata": "99f692103f3829446084cdd44ecc076fb9c5f73fe21a7f47056de53b0fe25414"
        },
        "inherit": [
          "Ownable",
          "VRFConsumerBase",
          "VRFRequestIDBase",
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Base64"
        ],
        "methods": [
          "(address,address,bytes32,uint256)",
          "withdraw()",
          "create()",
          "finishMint(uint256)",
          "generateSVG(uint256)",
          "generatePath(uint256)",
          "generatePathCommand(uint256)",
          "svgToImageURI(string)",
          "formatTokenURI(string)",
          "bytes32ToString(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RandomSVG",
            "src": "contracts\\RandomSVG.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "RandomSVG",
              "label": "tokenCounter",
              "type": "t_uint256",
              "src": "contracts\\RandomSVG.sol:11"
            },
            {
              "contract": "RandomSVG",
              "label": "requestIdToSender",
              "type": "t_mapping(t_bytes32,t_address)",
              "src": "contracts\\RandomSVG.sol:18"
            },
            {
              "contract": "RandomSVG",
              "label": "tokenIdToRandomNumber",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\RandomSVG.sol:19"
            },
            {
              "contract": "RandomSVG",
              "label": "requestIdToTokenId",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "contracts\\RandomSVG.sol:20"
            },
            {
              "contract": "RandomSVG",
              "label": "keyHash",
              "type": "t_bytes32",
              "src": "contracts\\RandomSVG.sol:21"
            },
            {
              "contract": "RandomSVG",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts\\RandomSVG.sol:22"
            },
            {
              "contract": "RandomSVG",
              "label": "maxNumberOfPaths",
              "type": "t_uint256",
              "src": "contracts\\RandomSVG.sol:23"
            },
            {
              "contract": "RandomSVG",
              "label": "maxNumberOfPathCommands",
              "type": "t_uint256",
              "src": "contracts\\RandomSVG.sol:24"
            },
            {
              "contract": "RandomSVG",
              "label": "size",
              "type": "t_uint256",
              "src": "contracts\\RandomSVG.sol:25"
            },
            {
              "contract": "RandomSVG",
              "label": "pathCommands",
              "type": "t_array(t_string_storage)dyn_storage",
              "src": "contracts\\RandomSVG.sol:26"
            },
            {
              "contract": "RandomSVG",
              "label": "colors",
              "type": "t_array(t_string_storage)dyn_storage",
              "src": "contracts\\RandomSVG.sol:27"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "RockPaperScissors": {
        "src": "contracts\\RockPaperScissors.sol:11",
        "version": {
          "withMetadata": "a8cc7adff59e61072c3da5cc50c3710eeaa32c878622c20728c4a666bd77c5e4",
          "withoutMetadata": "a46772a01db35bbb9bb893ee5e502432e7b1b7f82a36a7eb6152f2c122fca66a",
          "linkedWithoutMetadata": "a46772a01db35bbb9bb893ee5e502432e7b1b7f82a36a7eb6152f2c122fca66a"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "StringUtils"
        ],
        "methods": [
          "(address)",
          "payfee(address payable,address payable,uint256)",
          "registerplayername(string,address payable)",
          "registergame(uint256)",
          "_checkplayerregistered(address payable)",
          "_checkgameregistered(uint256)",
          "_checkplayeringame(uint256,address)",
          "selectRock()",
          "selectPaper()",
          "selectScissors()",
          "stakeprevwinnings()",
          "choosegametostake(uint256,address payable)",
          "totalSupply()",
          "balanceOf(address)",
          "owner()",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RockPaperScissors",
            "src": "contracts\\RockPaperScissors.sol:96"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rockchosen",
            "src": "contracts\\RockPaperScissors.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "scissorschosen",
            "src": "contracts\\RockPaperScissors.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "paperchosen",
            "src": "contracts\\RockPaperScissors.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "setprevwinnings",
            "src": "contracts\\RockPaperScissors.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokenname",
            "src": "contracts\\RockPaperScissors.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_tokensymbol",
            "src": "contracts\\RockPaperScissors.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "randNonce",
            "src": "contracts\\RockPaperScissors.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "modulus",
            "src": "contracts\\RockPaperScissors.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_payfee",
            "src": "contracts\\RockPaperScissors.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxWaitTime",
            "src": "contracts\\RockPaperScissors.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalsupplytokens",
            "src": "contracts\\RockPaperScissors.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "RockPaperScissors",
              "label": "rockchosen",
              "type": "t_bool",
              "src": "contracts\\RockPaperScissors.sol:18"
            },
            {
              "contract": "RockPaperScissors",
              "label": "scissorschosen",
              "type": "t_bool",
              "src": "contracts\\RockPaperScissors.sol:19"
            },
            {
              "contract": "RockPaperScissors",
              "label": "paperchosen",
              "type": "t_bool",
              "src": "contracts\\RockPaperScissors.sol:20"
            },
            {
              "contract": "RockPaperScissors",
              "label": "choicemade",
              "type": "t_string_storage",
              "src": "contracts\\RockPaperScissors.sol:21"
            },
            {
              "contract": "RockPaperScissors",
              "label": "setprevwinnings",
              "type": "t_bool",
              "src": "contracts\\RockPaperScissors.sol:22"
            },
            {
              "contract": "RockPaperScissors",
              "label": "prev_gamestaked",
              "type": "t_uint256",
              "src": "contracts\\RockPaperScissors.sol:23"
            },
            {
              "contract": "RockPaperScissors",
              "label": "_tokenname",
              "type": "t_string_storage",
              "src": "contracts\\RockPaperScissors.sol:24"
            },
            {
              "contract": "RockPaperScissors",
              "label": "_tokensymbol",
              "type": "t_string_storage",
              "src": "contracts\\RockPaperScissors.sol:25"
            },
            {
              "contract": "RockPaperScissors",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts\\RockPaperScissors.sol:26"
            },
            {
              "contract": "RockPaperScissors",
              "label": "randNonce",
              "type": "t_uint256",
              "src": "contracts\\RockPaperScissors.sol:27"
            },
            {
              "contract": "RockPaperScissors",
              "label": "modulus",
              "type": "t_uint256",
              "src": "contracts\\RockPaperScissors.sol:28"
            },
            {
              "contract": "RockPaperScissors",
              "label": "_payfee",
              "type": "t_uint256",
              "src": "contracts\\RockPaperScissors.sol:29"
            },
            {
              "contract": "RockPaperScissors",
              "label": "maxWaitTime",
              "type": "t_uint256",
              "src": "contracts\\RockPaperScissors.sol:30"
            },
            {
              "contract": "RockPaperScissors",
              "label": "totalsupplytokens",
              "type": "t_uint256",
              "src": "contracts\\RockPaperScissors.sol:56"
            },
            {
              "contract": "RockPaperScissors",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\RockPaperScissors.sol:63"
            },
            {
              "contract": "RockPaperScissors",
              "label": "playeringamecheck",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))",
              "src": "contracts\\RockPaperScissors.sol:64"
            },
            {
              "contract": "RockPaperScissors",
              "label": "prev_winning",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\RockPaperScissors.sol:65"
            },
            {
              "contract": "RockPaperScissors",
              "label": "gamewithplayer",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "contracts\\RockPaperScissors.sol:66"
            },
            {
              "contract": "RockPaperScissors",
              "label": "gamesplayed",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\RockPaperScissors.sol:67"
            },
            {
              "contract": "RockPaperScissors",
              "label": "playersplayed",
              "type": "t_mapping(t_address,t_address)",
              "src": "contracts\\RockPaperScissors.sol:68"
            },
            {
              "contract": "RockPaperScissors",
              "label": "paidforgames",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts\\RockPaperScissors.sol:69"
            },
            {
              "contract": "RockPaperScissors",
              "label": "_games",
              "type": "t_mapping(t_uint256,t_struct(Game)5873_storage)",
              "src": "contracts\\RockPaperScissors.sol:72"
            },
            {
              "contract": "RockPaperScissors",
              "label": "_playerstore",
              "type": "t_mapping(t_address,t_struct(Players)5882_storage)",
              "src": "contracts\\RockPaperScissors.sol:73"
            },
            {
              "contract": "RockPaperScissors",
              "label": "_playinggames",
              "type": "t_mapping(t_uint256,t_struct(PlayingGame)5895_storage)",
              "src": "contracts\\RockPaperScissors.sol:74"
            },
            {
              "contract": "RockPaperScissors",
              "label": "newgame",
              "type": "t_struct(Game)5873_storage",
              "src": "contracts\\RockPaperScissors.sol:77"
            },
            {
              "contract": "RockPaperScissors",
              "label": "newplayerregistered",
              "type": "t_struct(Players)5882_storage",
              "src": "contracts\\RockPaperScissors.sol:78"
            },
            {
              "contract": "RockPaperScissors",
              "label": "playerinthegame",
              "type": "t_struct(PlayingGame)5895_storage",
              "src": "contracts\\RockPaperScissors.sol:79"
            },
            {
              "contract": "RockPaperScissors",
              "label": "gamesregistered",
              "type": "t_array(t_struct(Game)5873_storage)dyn_storage",
              "src": "contracts\\RockPaperScissors.sol:83"
            },
            {
              "contract": "RockPaperScissors",
              "label": "playersregistered",
              "type": "t_array(t_struct(Players)5882_storage)dyn_storage",
              "src": "contracts\\RockPaperScissors.sol:84"
            },
            {
              "contract": "RockPaperScissors",
              "label": "gameinplay",
              "type": "t_array(t_struct(PlayingGame)5895_storage)dyn_storage",
              "src": "contracts\\RockPaperScissors.sol:85"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
              "label": "mapping(address => mapping(bytes32 => bool))"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_uint256,t_struct(Game)5873_storage)": {
              "label": "mapping(uint256 => struct RockPaperScissors.Game)"
            },
            "t_struct(Game)5873_storage": {
              "label": "struct RockPaperScissors.Game",
              "members": [
                {
                  "label": "gameid",
                  "type": "t_uint256"
                },
                {
                  "label": "gamecount",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_address,t_struct(Players)5882_storage)": {
              "label": "mapping(address => struct RockPaperScissors.Players)"
            },
            "t_struct(Players)5882_storage": {
              "label": "struct RockPaperScissors.Players",
              "members": [
                {
                  "label": "playeraddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "playername",
                  "type": "t_string_storage"
                },
                {
                  "label": "playerscore",
                  "type": "t_uint256"
                },
                {
                  "label": "playerbalance",
                  "type": "t_uint256"
                }
              ]
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_mapping(t_uint256,t_struct(PlayingGame)5895_storage)": {
              "label": "mapping(uint256 => struct RockPaperScissors.PlayingGame)"
            },
            "t_struct(PlayingGame)5895_storage": {
              "label": "struct RockPaperScissors.PlayingGame",
              "members": [
                {
                  "label": "playinggameid",
                  "type": "t_uint256"
                },
                {
                  "label": "playerininaddress",
                  "type": "t_address_payable"
                },
                {
                  "label": "gameover",
                  "type": "t_bool"
                },
                {
                  "label": "gamescore",
                  "type": "t_uint256"
                },
                {
                  "label": "playerscount",
                  "type": "t_uint256"
                },
                {
                  "label": "duration",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_struct(Game)5873_storage)dyn_storage": {
              "label": "struct RockPaperScissors.Game[]"
            },
            "t_array(t_struct(Players)5882_storage)dyn_storage": {
              "label": "struct RockPaperScissors.Players[]"
            },
            "t_array(t_struct(PlayingGame)5895_storage)dyn_storage": {
              "label": "struct RockPaperScissors.PlayingGame[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SVGNFT": {
        "src": "contracts\\SVGNFT.sol:9",
        "version": {
          "withMetadata": "58f07fd05366c9eb4c8a9a41b50fb7294bf4adc814c79d7f6dcadc7445a1b93e",
          "withoutMetadata": "53045955a1e3c077f4bd69bb701f195c709309e2b3e0457cc025d84c32c57cdd",
          "linkedWithoutMetadata": "53045955a1e3c077f4bd69bb701f195c709309e2b3e0457cc025d84c32c57cdd"
        },
        "inherit": [
          "Ownable",
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Base64"
        ],
        "methods": [
          "()",
          "create(string)",
          "svgToImageURI(string)",
          "formatTokenURI(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SVGNFT",
            "src": "contracts\\SVGNFT.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SVGNFT",
              "label": "tokenCounter",
              "type": "t_uint256",
              "src": "contracts\\SVGNFT.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SimpleCollectible": {
        "src": "contracts\\SimpleCollectible.sol:7",
        "version": {
          "withMetadata": "635201d0c91d09d29553ab1a665b4ca2837d2a6b8bf9392ed7221fa5dd252922",
          "withoutMetadata": "503765746affd1f4e99a713995b74ce848f337a50158481f808c8b995248a829",
          "linkedWithoutMetadata": "503765746affd1f4e99a713995b74ce848f337a50158481f808c8b995248a829"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createCollectible(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleCollectible",
            "src": "contracts\\SimpleCollectible.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SimpleCollectible",
              "label": "tokenCounter",
              "type": "t_uint256",
              "src": "contracts\\SimpleCollectible.sol:8"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Token": {
        "src": "contracts\\Token.sol:7",
        "version": {
          "withMetadata": "6d25ad3dc6ca2c537a39bcd82cf106644029f9bf980172cf6df3275f4c035038",
          "withoutMetadata": "208dce2fc81eaa20685566f1a0cbd8d4aff538f6e9ee1cecb4169abe1d00c955",
          "linkedWithoutMetadata": "208dce2fc81eaa20685566f1a0cbd8d4aff538f6e9ee1cecb4169abe1d00c955"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address payable)",
          "transfer(address payable,address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts\\Token.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\Token.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\Token.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalSupply",
            "src": "contracts\\Token.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Token",
              "label": "name",
              "type": "t_string_storage",
              "src": "contracts\\Token.sol:10"
            },
            {
              "contract": "Token",
              "label": "symbol",
              "type": "t_string_storage",
              "src": "contracts\\Token.sol:11"
            },
            {
              "contract": "Token",
              "label": "totalSupply",
              "type": "t_uint256",
              "src": "contracts\\Token.sol:14"
            },
            {
              "contract": "Token",
              "label": "owner",
              "type": "t_address",
              "src": "contracts\\Token.sol:17"
            },
            {
              "contract": "Token",
              "label": "sender",
              "type": "t_address",
              "src": "contracts\\Token.sol:18"
            },
            {
              "contract": "Token",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts\\Token.sol:20"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Base64": {
        "src": "contracts\\libraries\\Base64.sol:8",
        "version": {
          "withMetadata": "1824a2319d3ca2c7a873ff10fa6134821d0b2cae500d6db190bcd84f7cf542d5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Math": {
        "src": "contracts\\libraries\\Math.sol:5",
        "version": {
          "withMetadata": "249c837f4dd5fbfd1668d8e8d312ab876ce8a80399a776bc757295fac684f952",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Power": {
        "src": "contracts\\libraries\\Power.sol:7",
        "version": {
          "withMetadata": "536456b4dd8a431a38b988df25529aaa4c5db7ae7e6b62d85d168dd3fe178c83",
          "withoutMetadata": "2792cda6b55ac12a9ff904e0e591f469c60aaa6d7c6b13c3897de0c9c6d87ec9",
          "linkedWithoutMetadata": "2792cda6b55ac12a9ff904e0e591f469c60aaa6d7c6b13c3897de0c9c6d87ec9"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initMaxExpArray()",
          "initLambertArray()",
          "power(uint256,uint256,uint32,uint32)",
          "balancedWeightsByStake(uint256,uint256,uint256,uint256,bool)",
          "safeFactors(uint256,uint256)",
          "normalizedWeights(uint256,uint256)",
          "accurateWeights(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Power",
              "label": "maxExpArray",
              "type": "t_array(t_uint256)128_storage",
              "src": "contracts\\libraries\\Power.sol:46"
            },
            {
              "contract": "Power",
              "label": "lambertArray",
              "type": "t_array(t_uint256)128_storage",
              "src": "contracts\\libraries\\Power.sol:148"
            }
          ],
          "types": {
            "t_array(t_uint256)128_storage": {
              "label": "uint256[128]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringUtils": {
        "src": "contracts\\libraries\\StringUtils.sol:1",
        "version": {
          "withMetadata": "94e791d9f6609103ec95518e626fbec0701b08fa106b160c9690a191690c9d81",
          "withoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c",
          "linkedWithoutMetadata": "9264cbd2fd3e349698e7cab8b10a97f29fc822a535300b9d0895016772e0af2c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "compare(string,string)",
          "equal(string,string)",
          "indexOf(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\UQ112x112.sol:8",
        "version": {
          "withMetadata": "e97d1437fbf84fc210871b5c3142f0bab62c89b77b2bed2a554d9d3981b59903",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "93d1c19be610246f34dccaeee3927c88bf30f7e65b3de4e1a92abeca9e4230f5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "LinkTokenReceiver": {
        "src": "@chainlink\\contracts\\src\\v0.6\\LinkTokenReceiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)",
          "getChainlinkToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@chainlink\\contracts\\src\\v0.6\\LinkTokenReceiver.sol:35"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "VRFConsumerBase": {
        "src": "@chainlink\\contracts\\src\\v0.6\\VRFConsumerBase.sol:103",
        "inherit": [
          "VRFRequestIDBase"
        ],
        "libraries": [
          "SafeMathChainlink"
        ],
        "methods": [
          "(address,address)",
          "rawFulfillRandomness(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBase",
            "src": "@chainlink\\contracts\\src\\v0.6\\VRFConsumerBase.sol:191"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VRFConsumerBase",
              "label": "LINK",
              "type": "t_contract(LinkTokenInterface)497",
              "src": "@chainlink\\contracts\\src\\v0.6\\VRFConsumerBase.sol:177"
            },
            {
              "contract": "VRFConsumerBase",
              "label": "vrfCoordinator",
              "type": "t_address",
              "src": "@chainlink\\contracts\\src\\v0.6\\VRFConsumerBase.sol:178"
            },
            {
              "contract": "VRFConsumerBase",
              "label": "nonces",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "src": "@chainlink\\contracts\\src\\v0.6\\VRFConsumerBase.sol:183"
            }
          ],
          "types": {
            "t_contract(LinkTokenInterface)497": {
              "label": "contract LinkTokenInterface"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "VRFRequestIDBase": {
        "src": "@chainlink\\contracts\\src\\v0.6\\VRFRequestIDBase.sol:4",
        "version": {
          "withMetadata": "651cab0bf679763bb72541a12fa70eccd89fb55aa2151eef7e78252ed29a9307",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AggregatorInterface": {
        "src": "@chainlink\\contracts\\src\\v0.6\\interfaces\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "latestTimestamp()",
          "latestRound()",
          "getAnswer(uint256)",
          "getTimestamp(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AggregatorV2V3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.6\\interfaces\\AggregatorV2V3Interface.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.6\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "src": "@chainlink\\contracts\\src\\v0.6\\interfaces\\ChainlinkRequestInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink\\contracts\\src\\v0.6\\interfaces\\LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathChainlink": {
        "src": "@chainlink\\contracts\\src\\v0.6\\vendor\\SafeMathChainlink.sol:17",
        "version": {
          "withMetadata": "d455fc48c448134261a042fa47416b8d1256b71025d05f08446aad8bf154d0a3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MockOracle": {
        "src": "contracts\\test_contracts\\MockOracle.sol:13",
        "version": {
          "withMetadata": "dc4144b3ad55e57877cd7421b35a8302a8798449bdd71005b1af4ddeef3b273b",
          "withoutMetadata": "a93d05524647203d87f83952529ce344720f8704e5d529b3e7d4df6984369ba3",
          "linkedWithoutMetadata": "a93d05524647203d87f83952529ce344720f8704e5d529b3e7d4df6984369ba3"
        },
        "inherit": [
          "LinkTokenReceiver",
          "ChainlinkRequestInterface"
        ],
        "libraries": [
          "SafeMathChainlink"
        ],
        "methods": [
          "(address)",
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "fulfillOracleRequest(bytes32,bytes32)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)",
          "getChainlinkToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockOracle",
            "src": "contracts\\test_contracts\\MockOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MockOracle",
              "label": "LinkToken",
              "type": "t_contract(LinkTokenInterface)497",
              "src": "contracts\\test_contracts\\MockOracle.sol:24"
            },
            {
              "contract": "MockOracle",
              "label": "commitments",
              "type": "t_mapping(t_bytes32,t_struct(Request)654_storage)",
              "src": "contracts\\test_contracts\\MockOracle.sol:25"
            }
          ],
          "types": {
            "t_contract(LinkTokenInterface)497": {
              "label": "contract LinkTokenInterface"
            },
            "t_mapping(t_bytes32,t_struct(Request)654_storage)": {
              "label": "mapping(bytes32 => struct MockOracle.Request)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(Request)654_storage": {
              "label": "struct MockOracle.Request",
              "members": [
                {
                  "label": "callbackAddr",
                  "type": "t_address"
                },
                {
                  "label": "callbackFunctionId",
                  "type": "t_bytes4"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes4": {
              "label": "bytes4"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "MockV3Aggregator": {
        "src": "contracts\\test_contracts\\MockV3Aggregator.sol:14",
        "version": {
          "withMetadata": "927f5a726805cec6da7bc7880f0ba65b622f1a64bfc387da91ad14abc8b64ac8",
          "withoutMetadata": "aed25b566475766afaf0860ffac6bcf61ab83b7ef42c4e5fa61000e36a275478",
          "linkedWithoutMetadata": "aed25b566475766afaf0860ffac6bcf61ab83b7ef42c4e5fa61000e36a275478"
        },
        "inherit": [
          "AggregatorV2V3Interface"
        ],
        "libraries": [],
        "methods": [
          "(uint8,int256)",
          "updateAnswer(int256)",
          "updateRoundData(uint80,int256,uint256,uint256)",
          "getRoundData(uint80)",
          "latestRoundData()",
          "description()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockV3Aggregator",
            "src": "contracts\\test_contracts\\MockV3Aggregator.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MockV3Aggregator",
              "label": "decimals",
              "type": "t_uint8",
              "src": "contracts\\test_contracts\\MockV3Aggregator.sol:17"
            },
            {
              "contract": "MockV3Aggregator",
              "label": "latestAnswer",
              "type": "t_int256",
              "src": "contracts\\test_contracts\\MockV3Aggregator.sol:18"
            },
            {
              "contract": "MockV3Aggregator",
              "label": "latestTimestamp",
              "type": "t_uint256",
              "src": "contracts\\test_contracts\\MockV3Aggregator.sol:19"
            },
            {
              "contract": "MockV3Aggregator",
              "label": "latestRound",
              "type": "t_uint256",
              "src": "contracts\\test_contracts\\MockV3Aggregator.sol:20"
            },
            {
              "contract": "MockV3Aggregator",
              "label": "getAnswer",
              "type": "t_mapping(t_uint256,t_int256)",
              "src": "contracts\\test_contracts\\MockV3Aggregator.sol:22"
            },
            {
              "contract": "MockV3Aggregator",
              "label": "getTimestamp",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\test_contracts\\MockV3Aggregator.sol:23"
            },
            {
              "contract": "MockV3Aggregator",
              "label": "getStartedAt",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts\\test_contracts\\MockV3Aggregator.sol:24"
            }
          ],
          "types": {
            "t_uint8": {
              "label": "uint8"
            },
            "t_int256": {
              "label": "int256"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_int256)": {
              "label": "mapping(uint256 => int256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "VRFCoordinatorMock": {
        "src": "contracts\\test_contracts\\VRFCoordinatorMock.sol:7",
        "version": {
          "withMetadata": "72e65241b44aab05207cbc04a19c503ff2e70a42a15994e4efd3334bb09a90f4",
          "withoutMetadata": "44fd3e598b53ec363eedcffbd106c4cece4b94cbb470adf774ca1b35402ff0c1",
          "linkedWithoutMetadata": "44fd3e598b53ec363eedcffbd106c4cece4b94cbb470adf774ca1b35402ff0c1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "onTokenTransfer(address,uint256,bytes)",
          "callBackWithRandomness(bytes32,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFCoordinatorMock",
            "src": "contracts\\test_contracts\\VRFCoordinatorMock.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "VRFCoordinatorMock",
              "label": "LINK",
              "type": "t_contract(LinkTokenInterface)497",
              "src": "contracts\\test_contracts\\VRFCoordinatorMock.sol:9"
            }
          ],
          "types": {
            "t_contract(LinkTokenInterface)497": {
              "label": "contract LinkTokenInterface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC677Token": {
        "src": "@chainlink\\contracts\\src\\v0.4\\ERC677Token.sol:8",
        "inherit": [
          "ERC677",
          "ERC20",
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@chainlink\\contracts\\src\\v0.4\\interfaces\\ERC20.sol:11",
        "inherit": [
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Basic": {
        "src": "@chainlink\\contracts\\src\\v0.4\\interfaces\\ERC20Basic.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC20Basic",
              "label": "totalSupply",
              "type": "t_uint256",
              "src": "@chainlink\\contracts\\src\\v0.4\\interfaces\\ERC20Basic.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC677": {
        "src": "@chainlink\\contracts\\src\\v0.4\\interfaces\\ERC677.sol:5",
        "inherit": [
          "ERC20",
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC677Receiver": {
        "src": "@chainlink\\contracts\\src\\v0.4\\interfaces\\ERC677Receiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "BasicToken": {
        "src": "@chainlink\\contracts\\src\\v0.4\\vendor\\BasicToken.sol:12",
        "version": {
          "withMetadata": "1c1f6c9f57be730837b904d36c81d2905dc1387aded0733652a97c6df60b0e3f",
          "withoutMetadata": "d7236a89cf4c4d89243f2e0fb4387dace1ca1ea1ca6a859f2dc3bf5f35b76ff9",
          "linkedWithoutMetadata": "d7236a89cf4c4d89243f2e0fb4387dace1ca1ea1ca6a859f2dc3bf5f35b76ff9"
        },
        "inherit": [
          "ERC20Basic"
        ],
        "libraries": [
          "SafeMathChainlink"
        ],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "BasicToken",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@chainlink\\contracts\\src\\v0.4\\vendor\\BasicToken.sol:15"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "SafeMathChainlink": {
        "src": "@chainlink\\contracts\\src\\v0.4\\vendor\\SafeMathChainlink.sol:8",
        "version": {
          "withMetadata": "e7a231d05b88675fb17957ac5a021298811cef8e1b6f42943905351d2a1ff688",
          "withoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688",
          "linkedWithoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StandardToken": {
        "src": "@chainlink\\contracts\\src\\v0.4\\vendor\\StandardToken.sol:15",
        "version": {
          "withMetadata": "553e09f556f6f2ea36739a9ae9d62831f9757e61fac561480e828fe9b8fbfe7b",
          "withoutMetadata": "2c90aab3b8f7e6680694971ef545fa12a4b1007cf0d03d51f1d87896d064591c",
          "linkedWithoutMetadata": "2c90aab3b8f7e6680694971ef545fa12a4b1007cf0d03d51f1d87896d064591c"
        },
        "inherit": [
          "BasicToken",
          "ERC20",
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseApproval(address,uint256)",
          "decreaseApproval(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "StandardToken",
              "label": "allowed",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@chainlink\\contracts\\src\\v0.4\\vendor\\StandardToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "LinkToken": {
        "src": "contracts\\test_contracts\\LinkToken.sol:13",
        "version": {
          "withMetadata": "c9840405e594d9dd4513d7087a82c520eef15ecac0f545cd0658ac58b2e04d4c",
          "withoutMetadata": "050b2c670ac8101043bd436dd63dbf32e394a777606164adcf9f7ee881a4eba5",
          "linkedWithoutMetadata": "050b2c670ac8101043bd436dd63dbf32e394a777606164adcf9f7ee881a4eba5"
        },
        "inherit": [
          "ERC677Token",
          "ERC677",
          "StandardToken",
          "BasicToken",
          "ERC20",
          "ERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "()",
          "transferAndCall(address,uint256,bytes)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}